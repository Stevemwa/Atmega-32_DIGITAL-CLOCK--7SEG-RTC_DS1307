
Digital Clock.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b7c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00000b7c  00000c10  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000016  0080006a  0080006a  00000c1a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c1a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000c4c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000c88  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b5a  00000000  00000000  00000d10  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006d0  00000000  00000000  0000186a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005de  00000000  00000000  00001f3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000124  00000000  00000000  00002518  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000462  00000000  00000000  0000263c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000048b  00000000  00000000  00002a9e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00002f29  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__ctors_end>
   4:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
   8:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
   c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  10:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  14:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  18:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  1c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  20:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  24:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  28:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  2c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  30:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  34:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  38:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  3c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  40:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  44:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  48:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  4c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  50:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  54:	07 63       	ori	r16, 0x37	; 55
  56:	42 36       	cpi	r20, 0x62	; 98
  58:	b7 9b       	sbis	0x16, 7	; 22
  5a:	d8 a7       	std	Y+40, r29	; 0x28
  5c:	1a 39       	cpi	r17, 0x9A	; 154
  5e:	68 56       	subi	r22, 0x68	; 104
  60:	18 ae       	std	Y+56, r1	; 0x38
  62:	ba ab       	std	Y+50, r27	; 0x32
  64:	55 8c       	ldd	r5, Z+29	; 0x1d
  66:	1d 3c       	cpi	r17, 0xCD	; 205
  68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
  6a:	57 63       	ori	r21, 0x37	; 55
  6c:	bd 6d       	ori	r27, 0xDD	; 221
  6e:	ed fd       	.word	0xfded	; ????
  70:	75 3e       	cpi	r23, 0xE5	; 229
  72:	f6 17       	cp	r31, r22
  74:	72 31       	cpi	r23, 0x12	; 18
  76:	bf 00       	.word	0x00bf	; ????
  78:	00 00       	nop
  7a:	80 3f       	cpi	r24, 0xF0	; 240
  7c:	08 00       	.word	0x0008	; ????
  7e:	00 00       	nop
  80:	be 92       	st	-X, r11
  82:	24 49       	sbci	r18, 0x94	; 148
  84:	12 3e       	cpi	r17, 0xE2	; 226
  86:	ab aa       	std	Y+51, r10	; 0x33
  88:	aa 2a       	or	r10, r26
  8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
  8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
  8e:	4c 3e       	cpi	r20, 0xEC	; 236
  90:	00 00       	nop
  92:	00 80       	ld	r0, Z
  94:	be ab       	std	Y+54, r27	; 0x36
  96:	aa aa       	std	Y+50, r10	; 0x32
  98:	aa 3e       	cpi	r26, 0xEA	; 234
  9a:	00 00       	nop
  9c:	00 00       	nop
  9e:	bf 00       	.word	0x00bf	; ????
  a0:	00 00       	nop
  a2:	80 3f       	cpi	r24, 0xF0	; 240
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	00 08       	sbc	r0, r0
  aa:	41 78       	andi	r20, 0x81	; 129
  ac:	d3 bb       	out	0x13, r29	; 19
  ae:	43 87       	std	Z+11, r20	; 0x0b
  b0:	d1 13       	cpse	r29, r17
  b2:	3d 19       	sub	r19, r13
  b4:	0e 3c       	cpi	r16, 0xCE	; 206
  b6:	c3 bd       	out	0x23, r28	; 35
  b8:	42 82       	std	Z+2, r4	; 0x02
  ba:	ad 2b       	or	r26, r29
  bc:	3e 68       	ori	r19, 0x8E	; 142
  be:	ec 82       	std	Y+4, r14	; 0x04
  c0:	76 be       	out	0x36, r7	; 54
  c2:	d9 8f       	std	Y+25, r29	; 0x19
  c4:	e1 a9       	ldd	r30, Z+49	; 0x31
  c6:	3e 4c       	sbci	r19, 0xCE	; 206
  c8:	80 ef       	ldi	r24, 0xF0	; 240
  ca:	ff be       	out	0x3f, r15	; 63
  cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <__stack+0x71>
  ce:	ff 7f       	andi	r31, 0xFF	; 255
  d0:	3f 00       	.word	0x003f	; ????
  d2:	00 00       	nop
	...

000000d6 <__ctors_end>:
  d6:	11 24       	eor	r1, r1
  d8:	1f be       	out	0x3f, r1	; 63
  da:	cf e5       	ldi	r28, 0x5F	; 95
  dc:	d8 e0       	ldi	r29, 0x08	; 8
  de:	de bf       	out	0x3e, r29	; 62
  e0:	cd bf       	out	0x3d, r28	; 61

000000e2 <__do_copy_data>:
  e2:	10 e0       	ldi	r17, 0x00	; 0
  e4:	a0 e6       	ldi	r26, 0x60	; 96
  e6:	b0 e0       	ldi	r27, 0x00	; 0
  e8:	ec e7       	ldi	r30, 0x7C	; 124
  ea:	fb e0       	ldi	r31, 0x0B	; 11
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <__do_copy_data+0x10>
  ee:	05 90       	lpm	r0, Z+
  f0:	0d 92       	st	X+, r0
  f2:	aa 36       	cpi	r26, 0x6A	; 106
  f4:	b1 07       	cpc	r27, r17
  f6:	d9 f7       	brne	.-10     	; 0xee <__do_copy_data+0xc>

000000f8 <__do_clear_bss>:
  f8:	20 e0       	ldi	r18, 0x00	; 0
  fa:	aa e6       	ldi	r26, 0x6A	; 106
  fc:	b0 e0       	ldi	r27, 0x00	; 0
  fe:	01 c0       	rjmp	.+2      	; 0x102 <.do_clear_bss_start>

00000100 <.do_clear_bss_loop>:
 100:	1d 92       	st	X+, r1

00000102 <.do_clear_bss_start>:
 102:	a0 38       	cpi	r26, 0x80	; 128
 104:	b2 07       	cpc	r27, r18
 106:	e1 f7       	brne	.-8      	; 0x100 <.do_clear_bss_loop>
 108:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <main>
 10c:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <_exit>

00000110 <__bad_interrupt>:
 110:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000114 <I2C_Init>:
	day = I2C_Read_Ack();		/* Read day */
	date = I2C_Read_Ack();		/* Read date */
	month = I2C_Read_Ack();		/* Read month */
	year = I2C_Read_Nack();		/* Read the year with Nack */
	I2C_Stop();			/* Stop i2C communication */
}
 114:	11 b8       	out	0x01, r1	; 1
 116:	80 ec       	ldi	r24, 0xC0	; 192
 118:	80 b9       	out	0x00, r24	; 0
 11a:	08 95       	ret

0000011c <I2C_Start>:
 11c:	94 ea       	ldi	r25, 0xA4	; 164
 11e:	96 bf       	out	0x36, r25	; 54
 120:	06 b6       	in	r0, 0x36	; 54
 122:	07 fe       	sbrs	r0, 7
 124:	fd cf       	rjmp	.-6      	; 0x120 <I2C_Start+0x4>
 126:	91 b1       	in	r25, 0x01	; 1
 128:	98 7f       	andi	r25, 0xF8	; 248
 12a:	98 30       	cpi	r25, 0x08	; 8
 12c:	71 f4       	brne	.+28     	; 0x14a <I2C_Start+0x2e>
 12e:	83 b9       	out	0x03, r24	; 3
 130:	84 e8       	ldi	r24, 0x84	; 132
 132:	86 bf       	out	0x36, r24	; 54
 134:	06 b6       	in	r0, 0x36	; 54
 136:	07 fe       	sbrs	r0, 7
 138:	fd cf       	rjmp	.-6      	; 0x134 <I2C_Start+0x18>
 13a:	81 b1       	in	r24, 0x01	; 1
 13c:	88 7f       	andi	r24, 0xF8	; 248
 13e:	88 31       	cpi	r24, 0x18	; 24
 140:	31 f0       	breq	.+12     	; 0x14e <I2C_Start+0x32>
 142:	80 32       	cpi	r24, 0x20	; 32
 144:	31 f0       	breq	.+12     	; 0x152 <I2C_Start+0x36>
 146:	83 e0       	ldi	r24, 0x03	; 3
 148:	08 95       	ret
 14a:	80 e0       	ldi	r24, 0x00	; 0
 14c:	08 95       	ret
 14e:	81 e0       	ldi	r24, 0x01	; 1
 150:	08 95       	ret
 152:	82 e0       	ldi	r24, 0x02	; 2
 154:	08 95       	ret

00000156 <I2C_Repeated_Start>:
 156:	94 ea       	ldi	r25, 0xA4	; 164
 158:	96 bf       	out	0x36, r25	; 54
 15a:	06 b6       	in	r0, 0x36	; 54
 15c:	07 fe       	sbrs	r0, 7
 15e:	fd cf       	rjmp	.-6      	; 0x15a <I2C_Repeated_Start+0x4>
 160:	91 b1       	in	r25, 0x01	; 1
 162:	98 7f       	andi	r25, 0xF8	; 248
 164:	90 31       	cpi	r25, 0x10	; 16
 166:	71 f4       	brne	.+28     	; 0x184 <I2C_Repeated_Start+0x2e>
 168:	83 b9       	out	0x03, r24	; 3
 16a:	84 e8       	ldi	r24, 0x84	; 132
 16c:	86 bf       	out	0x36, r24	; 54
 16e:	06 b6       	in	r0, 0x36	; 54
 170:	07 fe       	sbrs	r0, 7
 172:	fd cf       	rjmp	.-6      	; 0x16e <I2C_Repeated_Start+0x18>
 174:	81 b1       	in	r24, 0x01	; 1
 176:	88 7f       	andi	r24, 0xF8	; 248
 178:	80 34       	cpi	r24, 0x40	; 64
 17a:	31 f0       	breq	.+12     	; 0x188 <I2C_Repeated_Start+0x32>
 17c:	88 34       	cpi	r24, 0x48	; 72
 17e:	31 f0       	breq	.+12     	; 0x18c <I2C_Repeated_Start+0x36>
 180:	83 e0       	ldi	r24, 0x03	; 3
 182:	08 95       	ret
 184:	80 e0       	ldi	r24, 0x00	; 0
 186:	08 95       	ret
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	08 95       	ret
 18c:	82 e0       	ldi	r24, 0x02	; 2
 18e:	08 95       	ret

00000190 <I2C_Write>:
 190:	83 b9       	out	0x03, r24	; 3
 192:	84 e8       	ldi	r24, 0x84	; 132
 194:	86 bf       	out	0x36, r24	; 54
 196:	06 b6       	in	r0, 0x36	; 54
 198:	07 fe       	sbrs	r0, 7
 19a:	fd cf       	rjmp	.-6      	; 0x196 <I2C_Write+0x6>
 19c:	81 b1       	in	r24, 0x01	; 1
 19e:	88 7f       	andi	r24, 0xF8	; 248
 1a0:	88 32       	cpi	r24, 0x28	; 40
 1a2:	21 f0       	breq	.+8      	; 0x1ac <I2C_Write+0x1c>
 1a4:	80 33       	cpi	r24, 0x30	; 48
 1a6:	21 f0       	breq	.+8      	; 0x1b0 <I2C_Write+0x20>
 1a8:	82 e0       	ldi	r24, 0x02	; 2
 1aa:	08 95       	ret
 1ac:	80 e0       	ldi	r24, 0x00	; 0
 1ae:	08 95       	ret
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	08 95       	ret

000001b4 <I2C_Read_Ack>:
 1b4:	84 ec       	ldi	r24, 0xC4	; 196
 1b6:	86 bf       	out	0x36, r24	; 54
 1b8:	06 b6       	in	r0, 0x36	; 54
 1ba:	07 fe       	sbrs	r0, 7
 1bc:	fd cf       	rjmp	.-6      	; 0x1b8 <I2C_Read_Ack+0x4>
 1be:	83 b1       	in	r24, 0x03	; 3
 1c0:	08 95       	ret

000001c2 <I2C_Read_Nack>:
 1c2:	84 e8       	ldi	r24, 0x84	; 132
 1c4:	86 bf       	out	0x36, r24	; 54
 1c6:	06 b6       	in	r0, 0x36	; 54
 1c8:	07 fe       	sbrs	r0, 7
 1ca:	fd cf       	rjmp	.-6      	; 0x1c6 <I2C_Read_Nack+0x4>
 1cc:	83 b1       	in	r24, 0x03	; 3
 1ce:	08 95       	ret

000001d0 <I2C_Stop>:
 1d0:	84 e9       	ldi	r24, 0x94	; 148
 1d2:	86 bf       	out	0x36, r24	; 54
 1d4:	06 b6       	in	r0, 0x36	; 54
 1d6:	04 fc       	sbrc	r0, 4
 1d8:	fd cf       	rjmp	.-6      	; 0x1d4 <I2C_Stop+0x4>
 1da:	08 95       	ret

000001dc <RTC_Read_Clock>:
 1dc:	cf 93       	push	r28
 1de:	c8 2f       	mov	r28, r24
 1e0:	80 ed       	ldi	r24, 0xD0	; 208
 1e2:	0e 94 8e 00 	call	0x11c	; 0x11c <I2C_Start>
 1e6:	8c 2f       	mov	r24, r28
 1e8:	0e 94 c8 00 	call	0x190	; 0x190 <I2C_Write>
 1ec:	81 ed       	ldi	r24, 0xD1	; 209
 1ee:	0e 94 ab 00 	call	0x156	; 0x156 <I2C_Repeated_Start>
 1f2:	0e 94 da 00 	call	0x1b4	; 0x1b4 <I2C_Read_Ack>
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <second+0x1>
 1fc:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <second>
 200:	0e 94 da 00 	call	0x1b4	; 0x1b4 <I2C_Read_Ack>
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <minute+0x1>
 20a:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <minute>
 20e:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <I2C_Read_Nack>
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	90 93 77 00 	sts	0x0077, r25	; 0x800077 <hour+0x1>
 218:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <hour>
 21c:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <I2C_Stop>
 220:	cf 91       	pop	r28
 222:	08 95       	ret

00000224 <display>:
	
	
}

void display(int digit){
	PORTB=number[digit];
 224:	80 5a       	subi	r24, 0xA0	; 160
 226:	9f 4f       	sbci	r25, 0xFF	; 255
 228:	fc 01       	movw	r30, r24
 22a:	80 81       	ld	r24, Z
 22c:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 22e:	8f e0       	ldi	r24, 0x0F	; 15
 230:	97 e2       	ldi	r25, 0x27	; 39
 232:	01 97       	sbiw	r24, 0x01	; 1
 234:	f1 f7       	brne	.-4      	; 0x232 <display+0xe>
 236:	00 c0       	rjmp	.+0      	; 0x238 <display+0x14>
 238:	00 00       	nop
 23a:	08 95       	ret

0000023c <write>:





void write(int hrs){
 23c:	0f 93       	push	r16
 23e:	1f 93       	push	r17
 240:	cf 93       	push	r28
	
	
	tens=hrs/10;
 242:	6a e0       	ldi	r22, 0x0A	; 10
 244:	70 e0       	ldi	r23, 0x00	; 0
 246:	0e 94 94 05 	call	0xb28	; 0xb28 <__divmodhi4>
 24a:	8c 01       	movw	r16, r24
 24c:	70 93 79 00 	sts	0x0079, r23	; 0x800079 <tens+0x1>
 250:	60 93 78 00 	sts	0x0078, r22	; 0x800078 <tens>
	PORTA=~(0x02);
 254:	8d ef       	ldi	r24, 0xFD	; 253
 256:	8b bb       	out	0x1b, r24	; 27
	display(tens);
 258:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <tens>
 25c:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <tens+0x1>
 260:	0e 94 12 01 	call	0x224	; 0x224 <display>
	PORTA=0x0f;
 264:	cf e0       	ldi	r28, 0x0F	; 15
 266:	cb bb       	out	0x1b, r28	; 27
	
	ones=hrs%10;
 268:	10 93 6d 00 	sts	0x006D, r17	; 0x80006d <ones+0x1>
 26c:	00 93 6c 00 	sts	0x006C, r16	; 0x80006c <ones>
	PORTA=~(0x01);
 270:	8e ef       	ldi	r24, 0xFE	; 254
 272:	8b bb       	out	0x1b, r24	; 27
	display(ones);
 274:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <ones>
 278:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <ones+0x1>
 27c:	0e 94 12 01 	call	0x224	; 0x224 <display>
	PORTA=0x0f;
 280:	cb bb       	out	0x1b, r28	; 27
		
}
 282:	cf 91       	pop	r28
 284:	1f 91       	pop	r17
 286:	0f 91       	pop	r16
 288:	08 95       	ret

0000028a <read>:

void read(int hrs){
 28a:	0f 93       	push	r16
 28c:	1f 93       	push	r17
 28e:	cf 93       	push	r28
	
	tens = hrs/10;
 290:	6a e0       	ldi	r22, 0x0A	; 10
 292:	70 e0       	ldi	r23, 0x00	; 0
 294:	0e 94 94 05 	call	0xb28	; 0xb28 <__divmodhi4>
 298:	8c 01       	movw	r16, r24
 29a:	70 93 79 00 	sts	0x0079, r23	; 0x800079 <tens+0x1>
 29e:	60 93 78 00 	sts	0x0078, r22	; 0x800078 <tens>
	PORTA=~(0x04);
 2a2:	8b ef       	ldi	r24, 0xFB	; 251
 2a4:	8b bb       	out	0x1b, r24	; 27
	display(tens);
 2a6:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <tens>
 2aa:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <tens+0x1>
 2ae:	0e 94 12 01 	call	0x224	; 0x224 <display>
	PORTA=0x0f;
 2b2:	cf e0       	ldi	r28, 0x0F	; 15
 2b4:	cb bb       	out	0x1b, r28	; 27
	ones=hrs%10;
 2b6:	10 93 6d 00 	sts	0x006D, r17	; 0x80006d <ones+0x1>
 2ba:	00 93 6c 00 	sts	0x006C, r16	; 0x80006c <ones>
	PORTA=~(0x08);
 2be:	87 ef       	ldi	r24, 0xF7	; 247
 2c0:	8b bb       	out	0x1b, r24	; 27
	display(ones);
 2c2:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <ones>
 2c6:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <ones+0x1>
 2ca:	0e 94 12 01 	call	0x224	; 0x224 <display>
	PORTA=0x0f;
 2ce:	cb bb       	out	0x1b, r28	; 27
	
	
}
 2d0:	cf 91       	pop	r28
 2d2:	1f 91       	pop	r17
 2d4:	0f 91       	pop	r16
 2d6:	08 95       	ret

000002d8 <main>:


int main(void)
{
	
	DDRB=0xff;
 2d8:	8f ef       	ldi	r24, 0xFF	; 255
 2da:	87 bb       	out	0x17, r24	; 23
	DDRA=0xfe;
 2dc:	8e ef       	ldi	r24, 0xFE	; 254
 2de:	8a bb       	out	0x1a, r24	; 26
	

	/*char buffer[20];
	char* days[7]= {"Sun","Mon","Tue","Wed","Thu","Fri","Sat"};*/

	I2C_Init();			/* Initialize I2C */
 2e0:	0e 94 8a 00 	call	0x114	; 0x114 <I2C_Init>
		int k=0;
		unsigned char value;
		RTC_Read_Clock(0);	/* Read clock with second add. i.e location is 0 */
		for(int i=0;i<=4;i++){
			
			value =(hour&(00100001 << i));
 2e4:	0f 2e       	mov	r0, r31
 2e6:	f6 e7       	ldi	r31, 0x76	; 118
 2e8:	6f 2e       	mov	r6, r31
 2ea:	f0 e0       	ldi	r31, 0x00	; 0
 2ec:	7f 2e       	mov	r7, r31
 2ee:	f0 2d       	mov	r31, r0
	

	while(1)
	{
		
		int k=0;
 2f0:	31 2c       	mov	r3, r1
		unsigned char value;
		RTC_Read_Clock(0);	/* Read clock with second add. i.e location is 0 */
		for(int i=0;i<=4;i++){
			
			value =(hour&(00100001 << i));
			if(value == 00000000){
 2f2:	cc 24       	eor	r12, r12
 2f4:	c3 94       	inc	r12
 2f6:	68 94       	set
 2f8:	dd 24       	eor	r13, r13
 2fa:	d7 f8       	bld	r13, 7
		_delay_ms(5);
		k=0;
		value =0;
		for(int i=0;i<=5;i++){
			
			value =(minute &(00000001 << i));
 2fc:	0f 2e       	mov	r0, r31
 2fe:	f2 e7       	ldi	r31, 0x72	; 114
 300:	4f 2e       	mov	r4, r31
 302:	f0 e0       	ldi	r31, 0x00	; 0
 304:	5f 2e       	mov	r5, r31
 306:	f0 2d       	mov	r31, r0
			if(value == 00000000){
 308:	ee 24       	eor	r14, r14
 30a:	e3 94       	inc	r14
 30c:	f1 2c       	mov	r15, r1
	while(1)
	{
		
		int k=0;
		unsigned char value;
		RTC_Read_Clock(0);	/* Read clock with second add. i.e location is 0 */
 30e:	80 e0       	ldi	r24, 0x00	; 0
 310:	0e 94 ee 00 	call	0x1dc	; 0x1dc <RTC_Read_Clock>
		for(int i=0;i<=4;i++){
			
			value =(hour&(00100001 << i));
 314:	f3 01       	movw	r30, r6
 316:	20 80       	ld	r2, Z
	{
		
		int k=0;
		unsigned char value;
		RTC_Read_Clock(0);	/* Read clock with second add. i.e location is 0 */
		for(int i=0;i<=4;i++){
 318:	c0 e0       	ldi	r28, 0x00	; 0
 31a:	d0 e0       	ldi	r29, 0x00	; 0
	

	while(1)
	{
		
		int k=0;
 31c:	03 2d       	mov	r16, r3
 31e:	10 e0       	ldi	r17, 0x00	; 0
		unsigned char value;
		RTC_Read_Clock(0);	/* Read clock with second add. i.e location is 0 */
		for(int i=0;i<=4;i++){
			
			value =(hour&(00100001 << i));
			if(value == 00000000){
 320:	c6 01       	movw	r24, r12
 322:	0c 2e       	mov	r0, r28
 324:	02 c0       	rjmp	.+4      	; 0x32a <main+0x52>
 326:	88 0f       	add	r24, r24
 328:	99 1f       	adc	r25, r25
 32a:	0a 94       	dec	r0
 32c:	e2 f7       	brpl	.-8      	; 0x326 <main+0x4e>
 32e:	82 21       	and	r24, r2
 330:	f1 f0       	breq	.+60     	; 0x36e <main+0x96>
				k=k+0;
				}else{
				k=k +(pow(2,i));
 332:	be 01       	movw	r22, r28
 334:	0d 2e       	mov	r0, r29
 336:	00 0c       	add	r0, r0
 338:	88 0b       	sbc	r24, r24
 33a:	99 0b       	sbc	r25, r25
 33c:	0e 94 a4 02 	call	0x548	; 0x548 <__floatsisf>
 340:	9b 01       	movw	r18, r22
 342:	ac 01       	movw	r20, r24
 344:	60 e0       	ldi	r22, 0x00	; 0
 346:	70 e0       	ldi	r23, 0x00	; 0
 348:	80 e0       	ldi	r24, 0x00	; 0
 34a:	90 e4       	ldi	r25, 0x40	; 64
 34c:	0e 94 30 03 	call	0x660	; 0x660 <pow>
 350:	4b 01       	movw	r8, r22
 352:	5c 01       	movw	r10, r24
 354:	b8 01       	movw	r22, r16
 356:	11 0f       	add	r17, r17
 358:	88 0b       	sbc	r24, r24
 35a:	99 0b       	sbc	r25, r25
 35c:	0e 94 a4 02 	call	0x548	; 0x548 <__floatsisf>
 360:	a5 01       	movw	r20, r10
 362:	94 01       	movw	r18, r8
 364:	0e 94 00 02 	call	0x400	; 0x400 <__addsf3>
 368:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <__fixsfsi>
 36c:	8b 01       	movw	r16, r22
	{
		
		int k=0;
		unsigned char value;
		RTC_Read_Clock(0);	/* Read clock with second add. i.e location is 0 */
		for(int i=0;i<=4;i++){
 36e:	21 96       	adiw	r28, 0x01	; 1
 370:	c5 30       	cpi	r28, 0x05	; 5
 372:	d1 05       	cpc	r29, r1
 374:	a9 f6       	brne	.-86     	; 0x320 <main+0x48>
				}else{
				k=k +(pow(2,i));
			}
		}
		
		write(k);
 376:	c8 01       	movw	r24, r16
 378:	0e 94 1e 01 	call	0x23c	; 0x23c <write>
 37c:	8f e0       	ldi	r24, 0x0F	; 15
 37e:	97 e2       	ldi	r25, 0x27	; 39
 380:	01 97       	sbiw	r24, 0x01	; 1
 382:	f1 f7       	brne	.-4      	; 0x380 <main+0xa8>
 384:	00 c0       	rjmp	.+0      	; 0x386 <main+0xae>
 386:	00 00       	nop
		_delay_ms(5);
		k=0;
		value =0;
		for(int i=0;i<=5;i++){
			
			value =(minute &(00000001 << i));
 388:	f2 01       	movw	r30, r4
 38a:	20 80       	ld	r2, Z
		write(k);
		
		_delay_ms(5);
		k=0;
		value =0;
		for(int i=0;i<=5;i++){
 38c:	c0 e0       	ldi	r28, 0x00	; 0
 38e:	d0 e0       	ldi	r29, 0x00	; 0
		}
		
		write(k);
		
		_delay_ms(5);
		k=0;
 390:	03 2d       	mov	r16, r3
 392:	10 e0       	ldi	r17, 0x00	; 0
		value =0;
		for(int i=0;i<=5;i++){
			
			value =(minute &(00000001 << i));
			if(value == 00000000){
 394:	c7 01       	movw	r24, r14
 396:	0c 2e       	mov	r0, r28
 398:	02 c0       	rjmp	.+4      	; 0x39e <main+0xc6>
 39a:	88 0f       	add	r24, r24
 39c:	99 1f       	adc	r25, r25
 39e:	0a 94       	dec	r0
 3a0:	e2 f7       	brpl	.-8      	; 0x39a <main+0xc2>
 3a2:	82 21       	and	r24, r2
 3a4:	f1 f0       	breq	.+60     	; 0x3e2 <main+0x10a>
				k=k+0;
				}else{
				k=k +(pow(2,i));
 3a6:	be 01       	movw	r22, r28
 3a8:	0d 2e       	mov	r0, r29
 3aa:	00 0c       	add	r0, r0
 3ac:	88 0b       	sbc	r24, r24
 3ae:	99 0b       	sbc	r25, r25
 3b0:	0e 94 a4 02 	call	0x548	; 0x548 <__floatsisf>
 3b4:	9b 01       	movw	r18, r22
 3b6:	ac 01       	movw	r20, r24
 3b8:	60 e0       	ldi	r22, 0x00	; 0
 3ba:	70 e0       	ldi	r23, 0x00	; 0
 3bc:	80 e0       	ldi	r24, 0x00	; 0
 3be:	90 e4       	ldi	r25, 0x40	; 64
 3c0:	0e 94 30 03 	call	0x660	; 0x660 <pow>
 3c4:	4b 01       	movw	r8, r22
 3c6:	5c 01       	movw	r10, r24
 3c8:	b8 01       	movw	r22, r16
 3ca:	11 0f       	add	r17, r17
 3cc:	88 0b       	sbc	r24, r24
 3ce:	99 0b       	sbc	r25, r25
 3d0:	0e 94 a4 02 	call	0x548	; 0x548 <__floatsisf>
 3d4:	a5 01       	movw	r20, r10
 3d6:	94 01       	movw	r18, r8
 3d8:	0e 94 00 02 	call	0x400	; 0x400 <__addsf3>
 3dc:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <__fixsfsi>
 3e0:	8b 01       	movw	r16, r22
		write(k);
		
		_delay_ms(5);
		k=0;
		value =0;
		for(int i=0;i<=5;i++){
 3e2:	21 96       	adiw	r28, 0x01	; 1
 3e4:	c6 30       	cpi	r28, 0x06	; 6
 3e6:	d1 05       	cpc	r29, r1
 3e8:	a9 f6       	brne	.-86     	; 0x394 <main+0xbc>
				k=k+0;
				}else{
				k=k +(pow(2,i));
			}
		}
		read(k);
 3ea:	c8 01       	movw	r24, r16
 3ec:	0e 94 45 01 	call	0x28a	; 0x28a <read>
 3f0:	8f e0       	ldi	r24, 0x0F	; 15
 3f2:	97 e2       	ldi	r25, 0x27	; 39
 3f4:	01 97       	sbiw	r24, 0x01	; 1
 3f6:	f1 f7       	brne	.-4      	; 0x3f4 <main+0x11c>
 3f8:	00 c0       	rjmp	.+0      	; 0x3fa <main+0x122>
 3fa:	00 00       	nop
 3fc:	88 cf       	rjmp	.-240    	; 0x30e <main+0x36>

000003fe <__subsf3>:
 3fe:	50 58       	subi	r21, 0x80	; 128

00000400 <__addsf3>:
 400:	bb 27       	eor	r27, r27
 402:	aa 27       	eor	r26, r26
 404:	0e 94 17 02 	call	0x42e	; 0x42e <__addsf3x>
 408:	0c 94 f6 02 	jmp	0x5ec	; 0x5ec <__fp_round>
 40c:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__fp_pscA>
 410:	38 f0       	brcs	.+14     	; 0x420 <__addsf3+0x20>
 412:	0e 94 ef 02 	call	0x5de	; 0x5de <__fp_pscB>
 416:	20 f0       	brcs	.+8      	; 0x420 <__addsf3+0x20>
 418:	39 f4       	brne	.+14     	; 0x428 <__addsf3+0x28>
 41a:	9f 3f       	cpi	r25, 0xFF	; 255
 41c:	19 f4       	brne	.+6      	; 0x424 <__addsf3+0x24>
 41e:	26 f4       	brtc	.+8      	; 0x428 <__addsf3+0x28>
 420:	0c 94 e5 02 	jmp	0x5ca	; 0x5ca <__fp_nan>
 424:	0e f4       	brtc	.+2      	; 0x428 <__addsf3+0x28>
 426:	e0 95       	com	r30
 428:	e7 fb       	bst	r30, 7
 42a:	0c 94 df 02 	jmp	0x5be	; 0x5be <__fp_inf>

0000042e <__addsf3x>:
 42e:	e9 2f       	mov	r30, r25
 430:	0e 94 07 03 	call	0x60e	; 0x60e <__fp_split3>
 434:	58 f3       	brcs	.-42     	; 0x40c <__addsf3+0xc>
 436:	ba 17       	cp	r27, r26
 438:	62 07       	cpc	r22, r18
 43a:	73 07       	cpc	r23, r19
 43c:	84 07       	cpc	r24, r20
 43e:	95 07       	cpc	r25, r21
 440:	20 f0       	brcs	.+8      	; 0x44a <__addsf3x+0x1c>
 442:	79 f4       	brne	.+30     	; 0x462 <__addsf3x+0x34>
 444:	a6 f5       	brtc	.+104    	; 0x4ae <__addsf3x+0x80>
 446:	0c 94 29 03 	jmp	0x652	; 0x652 <__fp_zero>
 44a:	0e f4       	brtc	.+2      	; 0x44e <__addsf3x+0x20>
 44c:	e0 95       	com	r30
 44e:	0b 2e       	mov	r0, r27
 450:	ba 2f       	mov	r27, r26
 452:	a0 2d       	mov	r26, r0
 454:	0b 01       	movw	r0, r22
 456:	b9 01       	movw	r22, r18
 458:	90 01       	movw	r18, r0
 45a:	0c 01       	movw	r0, r24
 45c:	ca 01       	movw	r24, r20
 45e:	a0 01       	movw	r20, r0
 460:	11 24       	eor	r1, r1
 462:	ff 27       	eor	r31, r31
 464:	59 1b       	sub	r21, r25
 466:	99 f0       	breq	.+38     	; 0x48e <__addsf3x+0x60>
 468:	59 3f       	cpi	r21, 0xF9	; 249
 46a:	50 f4       	brcc	.+20     	; 0x480 <__addsf3x+0x52>
 46c:	50 3e       	cpi	r21, 0xE0	; 224
 46e:	68 f1       	brcs	.+90     	; 0x4ca <__addsf3x+0x9c>
 470:	1a 16       	cp	r1, r26
 472:	f0 40       	sbci	r31, 0x00	; 0
 474:	a2 2f       	mov	r26, r18
 476:	23 2f       	mov	r18, r19
 478:	34 2f       	mov	r19, r20
 47a:	44 27       	eor	r20, r20
 47c:	58 5f       	subi	r21, 0xF8	; 248
 47e:	f3 cf       	rjmp	.-26     	; 0x466 <__addsf3x+0x38>
 480:	46 95       	lsr	r20
 482:	37 95       	ror	r19
 484:	27 95       	ror	r18
 486:	a7 95       	ror	r26
 488:	f0 40       	sbci	r31, 0x00	; 0
 48a:	53 95       	inc	r21
 48c:	c9 f7       	brne	.-14     	; 0x480 <__addsf3x+0x52>
 48e:	7e f4       	brtc	.+30     	; 0x4ae <__addsf3x+0x80>
 490:	1f 16       	cp	r1, r31
 492:	ba 0b       	sbc	r27, r26
 494:	62 0b       	sbc	r22, r18
 496:	73 0b       	sbc	r23, r19
 498:	84 0b       	sbc	r24, r20
 49a:	ba f0       	brmi	.+46     	; 0x4ca <__addsf3x+0x9c>
 49c:	91 50       	subi	r25, 0x01	; 1
 49e:	a1 f0       	breq	.+40     	; 0x4c8 <__addsf3x+0x9a>
 4a0:	ff 0f       	add	r31, r31
 4a2:	bb 1f       	adc	r27, r27
 4a4:	66 1f       	adc	r22, r22
 4a6:	77 1f       	adc	r23, r23
 4a8:	88 1f       	adc	r24, r24
 4aa:	c2 f7       	brpl	.-16     	; 0x49c <__addsf3x+0x6e>
 4ac:	0e c0       	rjmp	.+28     	; 0x4ca <__addsf3x+0x9c>
 4ae:	ba 0f       	add	r27, r26
 4b0:	62 1f       	adc	r22, r18
 4b2:	73 1f       	adc	r23, r19
 4b4:	84 1f       	adc	r24, r20
 4b6:	48 f4       	brcc	.+18     	; 0x4ca <__addsf3x+0x9c>
 4b8:	87 95       	ror	r24
 4ba:	77 95       	ror	r23
 4bc:	67 95       	ror	r22
 4be:	b7 95       	ror	r27
 4c0:	f7 95       	ror	r31
 4c2:	9e 3f       	cpi	r25, 0xFE	; 254
 4c4:	08 f0       	brcs	.+2      	; 0x4c8 <__addsf3x+0x9a>
 4c6:	b0 cf       	rjmp	.-160    	; 0x428 <__addsf3+0x28>
 4c8:	93 95       	inc	r25
 4ca:	88 0f       	add	r24, r24
 4cc:	08 f0       	brcs	.+2      	; 0x4d0 <__addsf3x+0xa2>
 4ce:	99 27       	eor	r25, r25
 4d0:	ee 0f       	add	r30, r30
 4d2:	97 95       	ror	r25
 4d4:	87 95       	ror	r24
 4d6:	08 95       	ret

000004d8 <__fixsfsi>:
 4d8:	0e 94 73 02 	call	0x4e6	; 0x4e6 <__fixunssfsi>
 4dc:	68 94       	set
 4de:	b1 11       	cpse	r27, r1
 4e0:	0c 94 2a 03 	jmp	0x654	; 0x654 <__fp_szero>
 4e4:	08 95       	ret

000004e6 <__fixunssfsi>:
 4e6:	0e 94 0f 03 	call	0x61e	; 0x61e <__fp_splitA>
 4ea:	88 f0       	brcs	.+34     	; 0x50e <__fixunssfsi+0x28>
 4ec:	9f 57       	subi	r25, 0x7F	; 127
 4ee:	98 f0       	brcs	.+38     	; 0x516 <__fixunssfsi+0x30>
 4f0:	b9 2f       	mov	r27, r25
 4f2:	99 27       	eor	r25, r25
 4f4:	b7 51       	subi	r27, 0x17	; 23
 4f6:	b0 f0       	brcs	.+44     	; 0x524 <__fixunssfsi+0x3e>
 4f8:	e1 f0       	breq	.+56     	; 0x532 <__fixunssfsi+0x4c>
 4fa:	66 0f       	add	r22, r22
 4fc:	77 1f       	adc	r23, r23
 4fe:	88 1f       	adc	r24, r24
 500:	99 1f       	adc	r25, r25
 502:	1a f0       	brmi	.+6      	; 0x50a <__fixunssfsi+0x24>
 504:	ba 95       	dec	r27
 506:	c9 f7       	brne	.-14     	; 0x4fa <__fixunssfsi+0x14>
 508:	14 c0       	rjmp	.+40     	; 0x532 <__fixunssfsi+0x4c>
 50a:	b1 30       	cpi	r27, 0x01	; 1
 50c:	91 f0       	breq	.+36     	; 0x532 <__fixunssfsi+0x4c>
 50e:	0e 94 29 03 	call	0x652	; 0x652 <__fp_zero>
 512:	b1 e0       	ldi	r27, 0x01	; 1
 514:	08 95       	ret
 516:	0c 94 29 03 	jmp	0x652	; 0x652 <__fp_zero>
 51a:	67 2f       	mov	r22, r23
 51c:	78 2f       	mov	r23, r24
 51e:	88 27       	eor	r24, r24
 520:	b8 5f       	subi	r27, 0xF8	; 248
 522:	39 f0       	breq	.+14     	; 0x532 <__fixunssfsi+0x4c>
 524:	b9 3f       	cpi	r27, 0xF9	; 249
 526:	cc f3       	brlt	.-14     	; 0x51a <__fixunssfsi+0x34>
 528:	86 95       	lsr	r24
 52a:	77 95       	ror	r23
 52c:	67 95       	ror	r22
 52e:	b3 95       	inc	r27
 530:	d9 f7       	brne	.-10     	; 0x528 <__fixunssfsi+0x42>
 532:	3e f4       	brtc	.+14     	; 0x542 <__fixunssfsi+0x5c>
 534:	90 95       	com	r25
 536:	80 95       	com	r24
 538:	70 95       	com	r23
 53a:	61 95       	neg	r22
 53c:	7f 4f       	sbci	r23, 0xFF	; 255
 53e:	8f 4f       	sbci	r24, 0xFF	; 255
 540:	9f 4f       	sbci	r25, 0xFF	; 255
 542:	08 95       	ret

00000544 <__floatunsisf>:
 544:	e8 94       	clt
 546:	09 c0       	rjmp	.+18     	; 0x55a <__floatsisf+0x12>

00000548 <__floatsisf>:
 548:	97 fb       	bst	r25, 7
 54a:	3e f4       	brtc	.+14     	; 0x55a <__floatsisf+0x12>
 54c:	90 95       	com	r25
 54e:	80 95       	com	r24
 550:	70 95       	com	r23
 552:	61 95       	neg	r22
 554:	7f 4f       	sbci	r23, 0xFF	; 255
 556:	8f 4f       	sbci	r24, 0xFF	; 255
 558:	9f 4f       	sbci	r25, 0xFF	; 255
 55a:	99 23       	and	r25, r25
 55c:	a9 f0       	breq	.+42     	; 0x588 <__floatsisf+0x40>
 55e:	f9 2f       	mov	r31, r25
 560:	96 e9       	ldi	r25, 0x96	; 150
 562:	bb 27       	eor	r27, r27
 564:	93 95       	inc	r25
 566:	f6 95       	lsr	r31
 568:	87 95       	ror	r24
 56a:	77 95       	ror	r23
 56c:	67 95       	ror	r22
 56e:	b7 95       	ror	r27
 570:	f1 11       	cpse	r31, r1
 572:	f8 cf       	rjmp	.-16     	; 0x564 <__floatsisf+0x1c>
 574:	fa f4       	brpl	.+62     	; 0x5b4 <__floatsisf+0x6c>
 576:	bb 0f       	add	r27, r27
 578:	11 f4       	brne	.+4      	; 0x57e <__floatsisf+0x36>
 57a:	60 ff       	sbrs	r22, 0
 57c:	1b c0       	rjmp	.+54     	; 0x5b4 <__floatsisf+0x6c>
 57e:	6f 5f       	subi	r22, 0xFF	; 255
 580:	7f 4f       	sbci	r23, 0xFF	; 255
 582:	8f 4f       	sbci	r24, 0xFF	; 255
 584:	9f 4f       	sbci	r25, 0xFF	; 255
 586:	16 c0       	rjmp	.+44     	; 0x5b4 <__floatsisf+0x6c>
 588:	88 23       	and	r24, r24
 58a:	11 f0       	breq	.+4      	; 0x590 <__floatsisf+0x48>
 58c:	96 e9       	ldi	r25, 0x96	; 150
 58e:	11 c0       	rjmp	.+34     	; 0x5b2 <__floatsisf+0x6a>
 590:	77 23       	and	r23, r23
 592:	21 f0       	breq	.+8      	; 0x59c <__floatsisf+0x54>
 594:	9e e8       	ldi	r25, 0x8E	; 142
 596:	87 2f       	mov	r24, r23
 598:	76 2f       	mov	r23, r22
 59a:	05 c0       	rjmp	.+10     	; 0x5a6 <__floatsisf+0x5e>
 59c:	66 23       	and	r22, r22
 59e:	71 f0       	breq	.+28     	; 0x5bc <__floatsisf+0x74>
 5a0:	96 e8       	ldi	r25, 0x86	; 134
 5a2:	86 2f       	mov	r24, r22
 5a4:	70 e0       	ldi	r23, 0x00	; 0
 5a6:	60 e0       	ldi	r22, 0x00	; 0
 5a8:	2a f0       	brmi	.+10     	; 0x5b4 <__floatsisf+0x6c>
 5aa:	9a 95       	dec	r25
 5ac:	66 0f       	add	r22, r22
 5ae:	77 1f       	adc	r23, r23
 5b0:	88 1f       	adc	r24, r24
 5b2:	da f7       	brpl	.-10     	; 0x5aa <__floatsisf+0x62>
 5b4:	88 0f       	add	r24, r24
 5b6:	96 95       	lsr	r25
 5b8:	87 95       	ror	r24
 5ba:	97 f9       	bld	r25, 7
 5bc:	08 95       	ret

000005be <__fp_inf>:
 5be:	97 f9       	bld	r25, 7
 5c0:	9f 67       	ori	r25, 0x7F	; 127
 5c2:	80 e8       	ldi	r24, 0x80	; 128
 5c4:	70 e0       	ldi	r23, 0x00	; 0
 5c6:	60 e0       	ldi	r22, 0x00	; 0
 5c8:	08 95       	ret

000005ca <__fp_nan>:
 5ca:	9f ef       	ldi	r25, 0xFF	; 255
 5cc:	80 ec       	ldi	r24, 0xC0	; 192
 5ce:	08 95       	ret

000005d0 <__fp_pscA>:
 5d0:	00 24       	eor	r0, r0
 5d2:	0a 94       	dec	r0
 5d4:	16 16       	cp	r1, r22
 5d6:	17 06       	cpc	r1, r23
 5d8:	18 06       	cpc	r1, r24
 5da:	09 06       	cpc	r0, r25
 5dc:	08 95       	ret

000005de <__fp_pscB>:
 5de:	00 24       	eor	r0, r0
 5e0:	0a 94       	dec	r0
 5e2:	12 16       	cp	r1, r18
 5e4:	13 06       	cpc	r1, r19
 5e6:	14 06       	cpc	r1, r20
 5e8:	05 06       	cpc	r0, r21
 5ea:	08 95       	ret

000005ec <__fp_round>:
 5ec:	09 2e       	mov	r0, r25
 5ee:	03 94       	inc	r0
 5f0:	00 0c       	add	r0, r0
 5f2:	11 f4       	brne	.+4      	; 0x5f8 <__fp_round+0xc>
 5f4:	88 23       	and	r24, r24
 5f6:	52 f0       	brmi	.+20     	; 0x60c <__fp_round+0x20>
 5f8:	bb 0f       	add	r27, r27
 5fa:	40 f4       	brcc	.+16     	; 0x60c <__fp_round+0x20>
 5fc:	bf 2b       	or	r27, r31
 5fe:	11 f4       	brne	.+4      	; 0x604 <__fp_round+0x18>
 600:	60 ff       	sbrs	r22, 0
 602:	04 c0       	rjmp	.+8      	; 0x60c <__fp_round+0x20>
 604:	6f 5f       	subi	r22, 0xFF	; 255
 606:	7f 4f       	sbci	r23, 0xFF	; 255
 608:	8f 4f       	sbci	r24, 0xFF	; 255
 60a:	9f 4f       	sbci	r25, 0xFF	; 255
 60c:	08 95       	ret

0000060e <__fp_split3>:
 60e:	57 fd       	sbrc	r21, 7
 610:	90 58       	subi	r25, 0x80	; 128
 612:	44 0f       	add	r20, r20
 614:	55 1f       	adc	r21, r21
 616:	59 f0       	breq	.+22     	; 0x62e <__fp_splitA+0x10>
 618:	5f 3f       	cpi	r21, 0xFF	; 255
 61a:	71 f0       	breq	.+28     	; 0x638 <__fp_splitA+0x1a>
 61c:	47 95       	ror	r20

0000061e <__fp_splitA>:
 61e:	88 0f       	add	r24, r24
 620:	97 fb       	bst	r25, 7
 622:	99 1f       	adc	r25, r25
 624:	61 f0       	breq	.+24     	; 0x63e <__fp_splitA+0x20>
 626:	9f 3f       	cpi	r25, 0xFF	; 255
 628:	79 f0       	breq	.+30     	; 0x648 <__fp_splitA+0x2a>
 62a:	87 95       	ror	r24
 62c:	08 95       	ret
 62e:	12 16       	cp	r1, r18
 630:	13 06       	cpc	r1, r19
 632:	14 06       	cpc	r1, r20
 634:	55 1f       	adc	r21, r21
 636:	f2 cf       	rjmp	.-28     	; 0x61c <__fp_split3+0xe>
 638:	46 95       	lsr	r20
 63a:	f1 df       	rcall	.-30     	; 0x61e <__fp_splitA>
 63c:	08 c0       	rjmp	.+16     	; 0x64e <__fp_splitA+0x30>
 63e:	16 16       	cp	r1, r22
 640:	17 06       	cpc	r1, r23
 642:	18 06       	cpc	r1, r24
 644:	99 1f       	adc	r25, r25
 646:	f1 cf       	rjmp	.-30     	; 0x62a <__fp_splitA+0xc>
 648:	86 95       	lsr	r24
 64a:	71 05       	cpc	r23, r1
 64c:	61 05       	cpc	r22, r1
 64e:	08 94       	sec
 650:	08 95       	ret

00000652 <__fp_zero>:
 652:	e8 94       	clt

00000654 <__fp_szero>:
 654:	bb 27       	eor	r27, r27
 656:	66 27       	eor	r22, r22
 658:	77 27       	eor	r23, r23
 65a:	cb 01       	movw	r24, r22
 65c:	97 f9       	bld	r25, 7
 65e:	08 95       	ret

00000660 <pow>:
 660:	fa 01       	movw	r30, r20
 662:	ee 0f       	add	r30, r30
 664:	ff 1f       	adc	r31, r31
 666:	30 96       	adiw	r30, 0x00	; 0
 668:	21 05       	cpc	r18, r1
 66a:	31 05       	cpc	r19, r1
 66c:	a1 f1       	breq	.+104    	; 0x6d6 <pow+0x76>
 66e:	61 15       	cp	r22, r1
 670:	71 05       	cpc	r23, r1
 672:	61 f4       	brne	.+24     	; 0x68c <pow+0x2c>
 674:	80 38       	cpi	r24, 0x80	; 128
 676:	bf e3       	ldi	r27, 0x3F	; 63
 678:	9b 07       	cpc	r25, r27
 67a:	49 f1       	breq	.+82     	; 0x6ce <pow+0x6e>
 67c:	68 94       	set
 67e:	90 38       	cpi	r25, 0x80	; 128
 680:	81 05       	cpc	r24, r1
 682:	61 f0       	breq	.+24     	; 0x69c <pow+0x3c>
 684:	80 38       	cpi	r24, 0x80	; 128
 686:	bf ef       	ldi	r27, 0xFF	; 255
 688:	9b 07       	cpc	r25, r27
 68a:	41 f0       	breq	.+16     	; 0x69c <pow+0x3c>
 68c:	99 23       	and	r25, r25
 68e:	4a f5       	brpl	.+82     	; 0x6e2 <pow+0x82>
 690:	ff 3f       	cpi	r31, 0xFF	; 255
 692:	e1 05       	cpc	r30, r1
 694:	31 05       	cpc	r19, r1
 696:	21 05       	cpc	r18, r1
 698:	19 f1       	breq	.+70     	; 0x6e0 <pow+0x80>
 69a:	e8 94       	clt
 69c:	08 94       	sec
 69e:	e7 95       	ror	r30
 6a0:	d9 01       	movw	r26, r18
 6a2:	aa 23       	and	r26, r26
 6a4:	29 f4       	brne	.+10     	; 0x6b0 <pow+0x50>
 6a6:	ab 2f       	mov	r26, r27
 6a8:	be 2f       	mov	r27, r30
 6aa:	f8 5f       	subi	r31, 0xF8	; 248
 6ac:	d0 f3       	brcs	.-12     	; 0x6a2 <pow+0x42>
 6ae:	10 c0       	rjmp	.+32     	; 0x6d0 <pow+0x70>
 6b0:	ff 5f       	subi	r31, 0xFF	; 255
 6b2:	70 f4       	brcc	.+28     	; 0x6d0 <pow+0x70>
 6b4:	a6 95       	lsr	r26
 6b6:	e0 f7       	brcc	.-8      	; 0x6b0 <pow+0x50>
 6b8:	f7 39       	cpi	r31, 0x97	; 151
 6ba:	50 f0       	brcs	.+20     	; 0x6d0 <pow+0x70>
 6bc:	19 f0       	breq	.+6      	; 0x6c4 <pow+0x64>
 6be:	ff 3a       	cpi	r31, 0xAF	; 175
 6c0:	38 f4       	brcc	.+14     	; 0x6d0 <pow+0x70>
 6c2:	9f 77       	andi	r25, 0x7F	; 127
 6c4:	9f 93       	push	r25
 6c6:	0d d0       	rcall	.+26     	; 0x6e2 <pow+0x82>
 6c8:	0f 90       	pop	r0
 6ca:	07 fc       	sbrc	r0, 7
 6cc:	90 58       	subi	r25, 0x80	; 128
 6ce:	08 95       	ret
 6d0:	46 f0       	brts	.+16     	; 0x6e2 <pow+0x82>
 6d2:	0c 94 e5 02 	jmp	0x5ca	; 0x5ca <__fp_nan>
 6d6:	60 e0       	ldi	r22, 0x00	; 0
 6d8:	70 e0       	ldi	r23, 0x00	; 0
 6da:	80 e8       	ldi	r24, 0x80	; 128
 6dc:	9f e3       	ldi	r25, 0x3F	; 63
 6de:	08 95       	ret
 6e0:	4f e7       	ldi	r20, 0x7F	; 127
 6e2:	9f 77       	andi	r25, 0x7F	; 127
 6e4:	5f 93       	push	r21
 6e6:	4f 93       	push	r20
 6e8:	3f 93       	push	r19
 6ea:	2f 93       	push	r18
 6ec:	0e 94 2b 04 	call	0x856	; 0x856 <log>
 6f0:	2f 91       	pop	r18
 6f2:	3f 91       	pop	r19
 6f4:	4f 91       	pop	r20
 6f6:	5f 91       	pop	r21
 6f8:	0e 94 a7 04 	call	0x94e	; 0x94e <__mulsf3>
 6fc:	0c 94 88 03 	jmp	0x710	; 0x710 <exp>
 700:	29 f4       	brne	.+10     	; 0x70c <pow+0xac>
 702:	16 f0       	brts	.+4      	; 0x708 <pow+0xa8>
 704:	0c 94 df 02 	jmp	0x5be	; 0x5be <__fp_inf>
 708:	0c 94 29 03 	jmp	0x652	; 0x652 <__fp_zero>
 70c:	0c 94 e5 02 	jmp	0x5ca	; 0x5ca <__fp_nan>

00000710 <exp>:
 710:	0e 94 0f 03 	call	0x61e	; 0x61e <__fp_splitA>
 714:	a8 f3       	brcs	.-22     	; 0x700 <pow+0xa0>
 716:	96 38       	cpi	r25, 0x86	; 134
 718:	a0 f7       	brcc	.-24     	; 0x702 <pow+0xa2>
 71a:	07 f8       	bld	r0, 7
 71c:	0f 92       	push	r0
 71e:	e8 94       	clt
 720:	2b e3       	ldi	r18, 0x3B	; 59
 722:	3a ea       	ldi	r19, 0xAA	; 170
 724:	48 eb       	ldi	r20, 0xB8	; 184
 726:	5f e7       	ldi	r21, 0x7F	; 127
 728:	0e 94 bd 04 	call	0x97a	; 0x97a <__mulsf3_pse>
 72c:	0f 92       	push	r0
 72e:	0f 92       	push	r0
 730:	0f 92       	push	r0
 732:	4d b7       	in	r20, 0x3d	; 61
 734:	5e b7       	in	r21, 0x3e	; 62
 736:	0f 92       	push	r0
 738:	0e 94 73 04 	call	0x8e6	; 0x8e6 <modf>
 73c:	e4 e5       	ldi	r30, 0x54	; 84
 73e:	f0 e0       	ldi	r31, 0x00	; 0
 740:	0e 94 ba 03 	call	0x774	; 0x774 <__fp_powser>
 744:	4f 91       	pop	r20
 746:	5f 91       	pop	r21
 748:	ef 91       	pop	r30
 74a:	ff 91       	pop	r31
 74c:	e5 95       	asr	r30
 74e:	ee 1f       	adc	r30, r30
 750:	ff 1f       	adc	r31, r31
 752:	49 f0       	breq	.+18     	; 0x766 <exp+0x56>
 754:	fe 57       	subi	r31, 0x7E	; 126
 756:	e0 68       	ori	r30, 0x80	; 128
 758:	44 27       	eor	r20, r20
 75a:	ee 0f       	add	r30, r30
 75c:	44 1f       	adc	r20, r20
 75e:	fa 95       	dec	r31
 760:	e1 f7       	brne	.-8      	; 0x75a <exp+0x4a>
 762:	41 95       	neg	r20
 764:	55 0b       	sbc	r21, r21
 766:	0e 94 ed 03 	call	0x7da	; 0x7da <ldexp>
 76a:	0f 90       	pop	r0
 76c:	07 fe       	sbrs	r0, 7
 76e:	0c 94 e1 03 	jmp	0x7c2	; 0x7c2 <inverse>
 772:	08 95       	ret

00000774 <__fp_powser>:
 774:	df 93       	push	r29
 776:	cf 93       	push	r28
 778:	1f 93       	push	r17
 77a:	0f 93       	push	r16
 77c:	ff 92       	push	r15
 77e:	ef 92       	push	r14
 780:	df 92       	push	r13
 782:	7b 01       	movw	r14, r22
 784:	8c 01       	movw	r16, r24
 786:	68 94       	set
 788:	06 c0       	rjmp	.+12     	; 0x796 <__fp_powser+0x22>
 78a:	da 2e       	mov	r13, r26
 78c:	ef 01       	movw	r28, r30
 78e:	0e 94 ba 04 	call	0x974	; 0x974 <__mulsf3x>
 792:	fe 01       	movw	r30, r28
 794:	e8 94       	clt
 796:	a5 91       	lpm	r26, Z+
 798:	25 91       	lpm	r18, Z+
 79a:	35 91       	lpm	r19, Z+
 79c:	45 91       	lpm	r20, Z+
 79e:	55 91       	lpm	r21, Z+
 7a0:	a6 f3       	brts	.-24     	; 0x78a <__fp_powser+0x16>
 7a2:	ef 01       	movw	r28, r30
 7a4:	0e 94 17 02 	call	0x42e	; 0x42e <__addsf3x>
 7a8:	fe 01       	movw	r30, r28
 7aa:	97 01       	movw	r18, r14
 7ac:	a8 01       	movw	r20, r16
 7ae:	da 94       	dec	r13
 7b0:	69 f7       	brne	.-38     	; 0x78c <__fp_powser+0x18>
 7b2:	df 90       	pop	r13
 7b4:	ef 90       	pop	r14
 7b6:	ff 90       	pop	r15
 7b8:	0f 91       	pop	r16
 7ba:	1f 91       	pop	r17
 7bc:	cf 91       	pop	r28
 7be:	df 91       	pop	r29
 7c0:	08 95       	ret

000007c2 <inverse>:
 7c2:	9b 01       	movw	r18, r22
 7c4:	ac 01       	movw	r20, r24
 7c6:	60 e0       	ldi	r22, 0x00	; 0
 7c8:	70 e0       	ldi	r23, 0x00	; 0
 7ca:	80 e8       	ldi	r24, 0x80	; 128
 7cc:	9f e3       	ldi	r25, 0x3F	; 63
 7ce:	0c 94 14 05 	jmp	0xa28	; 0xa28 <__divsf3>
 7d2:	0c 94 df 02 	jmp	0x5be	; 0x5be <__fp_inf>
 7d6:	0c 94 86 05 	jmp	0xb0c	; 0xb0c <__fp_mpack>

000007da <ldexp>:
 7da:	0e 94 0f 03 	call	0x61e	; 0x61e <__fp_splitA>
 7de:	d8 f3       	brcs	.-10     	; 0x7d6 <inverse+0x14>
 7e0:	99 23       	and	r25, r25
 7e2:	c9 f3       	breq	.-14     	; 0x7d6 <inverse+0x14>
 7e4:	94 0f       	add	r25, r20
 7e6:	51 1d       	adc	r21, r1
 7e8:	a3 f3       	brvs	.-24     	; 0x7d2 <inverse+0x10>
 7ea:	91 50       	subi	r25, 0x01	; 1
 7ec:	50 40       	sbci	r21, 0x00	; 0
 7ee:	94 f0       	brlt	.+36     	; 0x814 <ldexp+0x3a>
 7f0:	59 f0       	breq	.+22     	; 0x808 <ldexp+0x2e>
 7f2:	88 23       	and	r24, r24
 7f4:	32 f0       	brmi	.+12     	; 0x802 <ldexp+0x28>
 7f6:	66 0f       	add	r22, r22
 7f8:	77 1f       	adc	r23, r23
 7fa:	88 1f       	adc	r24, r24
 7fc:	91 50       	subi	r25, 0x01	; 1
 7fe:	50 40       	sbci	r21, 0x00	; 0
 800:	c1 f7       	brne	.-16     	; 0x7f2 <ldexp+0x18>
 802:	9e 3f       	cpi	r25, 0xFE	; 254
 804:	51 05       	cpc	r21, r1
 806:	2c f7       	brge	.-54     	; 0x7d2 <inverse+0x10>
 808:	88 0f       	add	r24, r24
 80a:	91 1d       	adc	r25, r1
 80c:	96 95       	lsr	r25
 80e:	87 95       	ror	r24
 810:	97 f9       	bld	r25, 7
 812:	08 95       	ret
 814:	5f 3f       	cpi	r21, 0xFF	; 255
 816:	ac f0       	brlt	.+42     	; 0x842 <ldexp+0x68>
 818:	98 3e       	cpi	r25, 0xE8	; 232
 81a:	9c f0       	brlt	.+38     	; 0x842 <ldexp+0x68>
 81c:	bb 27       	eor	r27, r27
 81e:	86 95       	lsr	r24
 820:	77 95       	ror	r23
 822:	67 95       	ror	r22
 824:	b7 95       	ror	r27
 826:	08 f4       	brcc	.+2      	; 0x82a <ldexp+0x50>
 828:	b1 60       	ori	r27, 0x01	; 1
 82a:	93 95       	inc	r25
 82c:	c1 f7       	brne	.-16     	; 0x81e <ldexp+0x44>
 82e:	bb 0f       	add	r27, r27
 830:	58 f7       	brcc	.-42     	; 0x808 <ldexp+0x2e>
 832:	11 f4       	brne	.+4      	; 0x838 <ldexp+0x5e>
 834:	60 ff       	sbrs	r22, 0
 836:	e8 cf       	rjmp	.-48     	; 0x808 <ldexp+0x2e>
 838:	6f 5f       	subi	r22, 0xFF	; 255
 83a:	7f 4f       	sbci	r23, 0xFF	; 255
 83c:	8f 4f       	sbci	r24, 0xFF	; 255
 83e:	9f 4f       	sbci	r25, 0xFF	; 255
 840:	e3 cf       	rjmp	.-58     	; 0x808 <ldexp+0x2e>
 842:	0c 94 2a 03 	jmp	0x654	; 0x654 <__fp_szero>
 846:	16 f0       	brts	.+4      	; 0x84c <ldexp+0x72>
 848:	0c 94 86 05 	jmp	0xb0c	; 0xb0c <__fp_mpack>
 84c:	0c 94 e5 02 	jmp	0x5ca	; 0x5ca <__fp_nan>
 850:	68 94       	set
 852:	0c 94 df 02 	jmp	0x5be	; 0x5be <__fp_inf>

00000856 <log>:
 856:	0e 94 0f 03 	call	0x61e	; 0x61e <__fp_splitA>
 85a:	a8 f3       	brcs	.-22     	; 0x846 <ldexp+0x6c>
 85c:	99 23       	and	r25, r25
 85e:	c1 f3       	breq	.-16     	; 0x850 <ldexp+0x76>
 860:	ae f3       	brts	.-22     	; 0x84c <ldexp+0x72>
 862:	df 93       	push	r29
 864:	cf 93       	push	r28
 866:	1f 93       	push	r17
 868:	0f 93       	push	r16
 86a:	ff 92       	push	r15
 86c:	c9 2f       	mov	r28, r25
 86e:	dd 27       	eor	r29, r29
 870:	88 23       	and	r24, r24
 872:	2a f0       	brmi	.+10     	; 0x87e <__stack+0x1f>
 874:	21 97       	sbiw	r28, 0x01	; 1
 876:	66 0f       	add	r22, r22
 878:	77 1f       	adc	r23, r23
 87a:	88 1f       	adc	r24, r24
 87c:	da f7       	brpl	.-10     	; 0x874 <__stack+0x15>
 87e:	20 e0       	ldi	r18, 0x00	; 0
 880:	30 e0       	ldi	r19, 0x00	; 0
 882:	40 e8       	ldi	r20, 0x80	; 128
 884:	5f eb       	ldi	r21, 0xBF	; 191
 886:	9f e3       	ldi	r25, 0x3F	; 63
 888:	88 39       	cpi	r24, 0x98	; 152
 88a:	20 f0       	brcs	.+8      	; 0x894 <__stack+0x35>
 88c:	80 3e       	cpi	r24, 0xE0	; 224
 88e:	38 f0       	brcs	.+14     	; 0x89e <__stack+0x3f>
 890:	21 96       	adiw	r28, 0x01	; 1
 892:	8f 77       	andi	r24, 0x7F	; 127
 894:	0e 94 00 02 	call	0x400	; 0x400 <__addsf3>
 898:	ec e7       	ldi	r30, 0x7C	; 124
 89a:	f0 e0       	ldi	r31, 0x00	; 0
 89c:	04 c0       	rjmp	.+8      	; 0x8a6 <__stack+0x47>
 89e:	0e 94 00 02 	call	0x400	; 0x400 <__addsf3>
 8a2:	e9 ea       	ldi	r30, 0xA9	; 169
 8a4:	f0 e0       	ldi	r31, 0x00	; 0
 8a6:	0e 94 ba 03 	call	0x774	; 0x774 <__fp_powser>
 8aa:	8b 01       	movw	r16, r22
 8ac:	be 01       	movw	r22, r28
 8ae:	ec 01       	movw	r28, r24
 8b0:	fb 2e       	mov	r15, r27
 8b2:	6f 57       	subi	r22, 0x7F	; 127
 8b4:	71 09       	sbc	r23, r1
 8b6:	75 95       	asr	r23
 8b8:	77 1f       	adc	r23, r23
 8ba:	88 0b       	sbc	r24, r24
 8bc:	99 0b       	sbc	r25, r25
 8be:	0e 94 a4 02 	call	0x548	; 0x548 <__floatsisf>
 8c2:	28 e1       	ldi	r18, 0x18	; 24
 8c4:	32 e7       	ldi	r19, 0x72	; 114
 8c6:	41 e3       	ldi	r20, 0x31	; 49
 8c8:	5f e3       	ldi	r21, 0x3F	; 63
 8ca:	0e 94 ba 04 	call	0x974	; 0x974 <__mulsf3x>
 8ce:	af 2d       	mov	r26, r15
 8d0:	98 01       	movw	r18, r16
 8d2:	ae 01       	movw	r20, r28
 8d4:	ff 90       	pop	r15
 8d6:	0f 91       	pop	r16
 8d8:	1f 91       	pop	r17
 8da:	cf 91       	pop	r28
 8dc:	df 91       	pop	r29
 8de:	0e 94 17 02 	call	0x42e	; 0x42e <__addsf3x>
 8e2:	0c 94 f6 02 	jmp	0x5ec	; 0x5ec <__fp_round>

000008e6 <modf>:
 8e6:	fa 01       	movw	r30, r20
 8e8:	dc 01       	movw	r26, r24
 8ea:	aa 0f       	add	r26, r26
 8ec:	bb 1f       	adc	r27, r27
 8ee:	9b 01       	movw	r18, r22
 8f0:	ac 01       	movw	r20, r24
 8f2:	bf 57       	subi	r27, 0x7F	; 127
 8f4:	28 f4       	brcc	.+10     	; 0x900 <modf+0x1a>
 8f6:	22 27       	eor	r18, r18
 8f8:	33 27       	eor	r19, r19
 8fa:	44 27       	eor	r20, r20
 8fc:	50 78       	andi	r21, 0x80	; 128
 8fe:	20 c0       	rjmp	.+64     	; 0x940 <modf+0x5a>
 900:	b7 51       	subi	r27, 0x17	; 23
 902:	90 f4       	brcc	.+36     	; 0x928 <modf+0x42>
 904:	ab 2f       	mov	r26, r27
 906:	00 24       	eor	r0, r0
 908:	46 95       	lsr	r20
 90a:	37 95       	ror	r19
 90c:	27 95       	ror	r18
 90e:	01 1c       	adc	r0, r1
 910:	a3 95       	inc	r26
 912:	d2 f3       	brmi	.-12     	; 0x908 <modf+0x22>
 914:	00 20       	and	r0, r0
 916:	71 f0       	breq	.+28     	; 0x934 <modf+0x4e>
 918:	22 0f       	add	r18, r18
 91a:	33 1f       	adc	r19, r19
 91c:	44 1f       	adc	r20, r20
 91e:	b3 95       	inc	r27
 920:	da f3       	brmi	.-10     	; 0x918 <modf+0x32>
 922:	0e d0       	rcall	.+28     	; 0x940 <modf+0x5a>
 924:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__subsf3>
 928:	61 30       	cpi	r22, 0x01	; 1
 92a:	71 05       	cpc	r23, r1
 92c:	a0 e8       	ldi	r26, 0x80	; 128
 92e:	8a 07       	cpc	r24, r26
 930:	b9 46       	sbci	r27, 0x69	; 105
 932:	30 f4       	brcc	.+12     	; 0x940 <modf+0x5a>
 934:	9b 01       	movw	r18, r22
 936:	ac 01       	movw	r20, r24
 938:	66 27       	eor	r22, r22
 93a:	77 27       	eor	r23, r23
 93c:	88 27       	eor	r24, r24
 93e:	90 78       	andi	r25, 0x80	; 128
 940:	30 96       	adiw	r30, 0x00	; 0
 942:	21 f0       	breq	.+8      	; 0x94c <modf+0x66>
 944:	20 83       	st	Z, r18
 946:	31 83       	std	Z+1, r19	; 0x01
 948:	42 83       	std	Z+2, r20	; 0x02
 94a:	53 83       	std	Z+3, r21	; 0x03
 94c:	08 95       	ret

0000094e <__mulsf3>:
 94e:	0e 94 ba 04 	call	0x974	; 0x974 <__mulsf3x>
 952:	0c 94 f6 02 	jmp	0x5ec	; 0x5ec <__fp_round>
 956:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__fp_pscA>
 95a:	38 f0       	brcs	.+14     	; 0x96a <__mulsf3+0x1c>
 95c:	0e 94 ef 02 	call	0x5de	; 0x5de <__fp_pscB>
 960:	20 f0       	brcs	.+8      	; 0x96a <__mulsf3+0x1c>
 962:	95 23       	and	r25, r21
 964:	11 f0       	breq	.+4      	; 0x96a <__mulsf3+0x1c>
 966:	0c 94 df 02 	jmp	0x5be	; 0x5be <__fp_inf>
 96a:	0c 94 e5 02 	jmp	0x5ca	; 0x5ca <__fp_nan>
 96e:	11 24       	eor	r1, r1
 970:	0c 94 2a 03 	jmp	0x654	; 0x654 <__fp_szero>

00000974 <__mulsf3x>:
 974:	0e 94 07 03 	call	0x60e	; 0x60e <__fp_split3>
 978:	70 f3       	brcs	.-36     	; 0x956 <__mulsf3+0x8>

0000097a <__mulsf3_pse>:
 97a:	95 9f       	mul	r25, r21
 97c:	c1 f3       	breq	.-16     	; 0x96e <__mulsf3+0x20>
 97e:	95 0f       	add	r25, r21
 980:	50 e0       	ldi	r21, 0x00	; 0
 982:	55 1f       	adc	r21, r21
 984:	62 9f       	mul	r22, r18
 986:	f0 01       	movw	r30, r0
 988:	72 9f       	mul	r23, r18
 98a:	bb 27       	eor	r27, r27
 98c:	f0 0d       	add	r31, r0
 98e:	b1 1d       	adc	r27, r1
 990:	63 9f       	mul	r22, r19
 992:	aa 27       	eor	r26, r26
 994:	f0 0d       	add	r31, r0
 996:	b1 1d       	adc	r27, r1
 998:	aa 1f       	adc	r26, r26
 99a:	64 9f       	mul	r22, r20
 99c:	66 27       	eor	r22, r22
 99e:	b0 0d       	add	r27, r0
 9a0:	a1 1d       	adc	r26, r1
 9a2:	66 1f       	adc	r22, r22
 9a4:	82 9f       	mul	r24, r18
 9a6:	22 27       	eor	r18, r18
 9a8:	b0 0d       	add	r27, r0
 9aa:	a1 1d       	adc	r26, r1
 9ac:	62 1f       	adc	r22, r18
 9ae:	73 9f       	mul	r23, r19
 9b0:	b0 0d       	add	r27, r0
 9b2:	a1 1d       	adc	r26, r1
 9b4:	62 1f       	adc	r22, r18
 9b6:	83 9f       	mul	r24, r19
 9b8:	a0 0d       	add	r26, r0
 9ba:	61 1d       	adc	r22, r1
 9bc:	22 1f       	adc	r18, r18
 9be:	74 9f       	mul	r23, r20
 9c0:	33 27       	eor	r19, r19
 9c2:	a0 0d       	add	r26, r0
 9c4:	61 1d       	adc	r22, r1
 9c6:	23 1f       	adc	r18, r19
 9c8:	84 9f       	mul	r24, r20
 9ca:	60 0d       	add	r22, r0
 9cc:	21 1d       	adc	r18, r1
 9ce:	82 2f       	mov	r24, r18
 9d0:	76 2f       	mov	r23, r22
 9d2:	6a 2f       	mov	r22, r26
 9d4:	11 24       	eor	r1, r1
 9d6:	9f 57       	subi	r25, 0x7F	; 127
 9d8:	50 40       	sbci	r21, 0x00	; 0
 9da:	9a f0       	brmi	.+38     	; 0xa02 <__mulsf3_pse+0x88>
 9dc:	f1 f0       	breq	.+60     	; 0xa1a <__mulsf3_pse+0xa0>
 9de:	88 23       	and	r24, r24
 9e0:	4a f0       	brmi	.+18     	; 0x9f4 <__mulsf3_pse+0x7a>
 9e2:	ee 0f       	add	r30, r30
 9e4:	ff 1f       	adc	r31, r31
 9e6:	bb 1f       	adc	r27, r27
 9e8:	66 1f       	adc	r22, r22
 9ea:	77 1f       	adc	r23, r23
 9ec:	88 1f       	adc	r24, r24
 9ee:	91 50       	subi	r25, 0x01	; 1
 9f0:	50 40       	sbci	r21, 0x00	; 0
 9f2:	a9 f7       	brne	.-22     	; 0x9de <__mulsf3_pse+0x64>
 9f4:	9e 3f       	cpi	r25, 0xFE	; 254
 9f6:	51 05       	cpc	r21, r1
 9f8:	80 f0       	brcs	.+32     	; 0xa1a <__mulsf3_pse+0xa0>
 9fa:	0c 94 df 02 	jmp	0x5be	; 0x5be <__fp_inf>
 9fe:	0c 94 2a 03 	jmp	0x654	; 0x654 <__fp_szero>
 a02:	5f 3f       	cpi	r21, 0xFF	; 255
 a04:	e4 f3       	brlt	.-8      	; 0x9fe <__mulsf3_pse+0x84>
 a06:	98 3e       	cpi	r25, 0xE8	; 232
 a08:	d4 f3       	brlt	.-12     	; 0x9fe <__mulsf3_pse+0x84>
 a0a:	86 95       	lsr	r24
 a0c:	77 95       	ror	r23
 a0e:	67 95       	ror	r22
 a10:	b7 95       	ror	r27
 a12:	f7 95       	ror	r31
 a14:	e7 95       	ror	r30
 a16:	9f 5f       	subi	r25, 0xFF	; 255
 a18:	c1 f7       	brne	.-16     	; 0xa0a <__mulsf3_pse+0x90>
 a1a:	fe 2b       	or	r31, r30
 a1c:	88 0f       	add	r24, r24
 a1e:	91 1d       	adc	r25, r1
 a20:	96 95       	lsr	r25
 a22:	87 95       	ror	r24
 a24:	97 f9       	bld	r25, 7
 a26:	08 95       	ret

00000a28 <__divsf3>:
 a28:	0e 94 28 05 	call	0xa50	; 0xa50 <__divsf3x>
 a2c:	0c 94 f6 02 	jmp	0x5ec	; 0x5ec <__fp_round>
 a30:	0e 94 ef 02 	call	0x5de	; 0x5de <__fp_pscB>
 a34:	58 f0       	brcs	.+22     	; 0xa4c <__divsf3+0x24>
 a36:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__fp_pscA>
 a3a:	40 f0       	brcs	.+16     	; 0xa4c <__divsf3+0x24>
 a3c:	29 f4       	brne	.+10     	; 0xa48 <__divsf3+0x20>
 a3e:	5f 3f       	cpi	r21, 0xFF	; 255
 a40:	29 f0       	breq	.+10     	; 0xa4c <__divsf3+0x24>
 a42:	0c 94 df 02 	jmp	0x5be	; 0x5be <__fp_inf>
 a46:	51 11       	cpse	r21, r1
 a48:	0c 94 2a 03 	jmp	0x654	; 0x654 <__fp_szero>
 a4c:	0c 94 e5 02 	jmp	0x5ca	; 0x5ca <__fp_nan>

00000a50 <__divsf3x>:
 a50:	0e 94 07 03 	call	0x60e	; 0x60e <__fp_split3>
 a54:	68 f3       	brcs	.-38     	; 0xa30 <__divsf3+0x8>

00000a56 <__divsf3_pse>:
 a56:	99 23       	and	r25, r25
 a58:	b1 f3       	breq	.-20     	; 0xa46 <__divsf3+0x1e>
 a5a:	55 23       	and	r21, r21
 a5c:	91 f3       	breq	.-28     	; 0xa42 <__divsf3+0x1a>
 a5e:	95 1b       	sub	r25, r21
 a60:	55 0b       	sbc	r21, r21
 a62:	bb 27       	eor	r27, r27
 a64:	aa 27       	eor	r26, r26
 a66:	62 17       	cp	r22, r18
 a68:	73 07       	cpc	r23, r19
 a6a:	84 07       	cpc	r24, r20
 a6c:	38 f0       	brcs	.+14     	; 0xa7c <__divsf3_pse+0x26>
 a6e:	9f 5f       	subi	r25, 0xFF	; 255
 a70:	5f 4f       	sbci	r21, 0xFF	; 255
 a72:	22 0f       	add	r18, r18
 a74:	33 1f       	adc	r19, r19
 a76:	44 1f       	adc	r20, r20
 a78:	aa 1f       	adc	r26, r26
 a7a:	a9 f3       	breq	.-22     	; 0xa66 <__divsf3_pse+0x10>
 a7c:	35 d0       	rcall	.+106    	; 0xae8 <__divsf3_pse+0x92>
 a7e:	0e 2e       	mov	r0, r30
 a80:	3a f0       	brmi	.+14     	; 0xa90 <__divsf3_pse+0x3a>
 a82:	e0 e8       	ldi	r30, 0x80	; 128
 a84:	32 d0       	rcall	.+100    	; 0xaea <__divsf3_pse+0x94>
 a86:	91 50       	subi	r25, 0x01	; 1
 a88:	50 40       	sbci	r21, 0x00	; 0
 a8a:	e6 95       	lsr	r30
 a8c:	00 1c       	adc	r0, r0
 a8e:	ca f7       	brpl	.-14     	; 0xa82 <__divsf3_pse+0x2c>
 a90:	2b d0       	rcall	.+86     	; 0xae8 <__divsf3_pse+0x92>
 a92:	fe 2f       	mov	r31, r30
 a94:	29 d0       	rcall	.+82     	; 0xae8 <__divsf3_pse+0x92>
 a96:	66 0f       	add	r22, r22
 a98:	77 1f       	adc	r23, r23
 a9a:	88 1f       	adc	r24, r24
 a9c:	bb 1f       	adc	r27, r27
 a9e:	26 17       	cp	r18, r22
 aa0:	37 07       	cpc	r19, r23
 aa2:	48 07       	cpc	r20, r24
 aa4:	ab 07       	cpc	r26, r27
 aa6:	b0 e8       	ldi	r27, 0x80	; 128
 aa8:	09 f0       	breq	.+2      	; 0xaac <__divsf3_pse+0x56>
 aaa:	bb 0b       	sbc	r27, r27
 aac:	80 2d       	mov	r24, r0
 aae:	bf 01       	movw	r22, r30
 ab0:	ff 27       	eor	r31, r31
 ab2:	93 58       	subi	r25, 0x83	; 131
 ab4:	5f 4f       	sbci	r21, 0xFF	; 255
 ab6:	3a f0       	brmi	.+14     	; 0xac6 <__divsf3_pse+0x70>
 ab8:	9e 3f       	cpi	r25, 0xFE	; 254
 aba:	51 05       	cpc	r21, r1
 abc:	78 f0       	brcs	.+30     	; 0xadc <__divsf3_pse+0x86>
 abe:	0c 94 df 02 	jmp	0x5be	; 0x5be <__fp_inf>
 ac2:	0c 94 2a 03 	jmp	0x654	; 0x654 <__fp_szero>
 ac6:	5f 3f       	cpi	r21, 0xFF	; 255
 ac8:	e4 f3       	brlt	.-8      	; 0xac2 <__divsf3_pse+0x6c>
 aca:	98 3e       	cpi	r25, 0xE8	; 232
 acc:	d4 f3       	brlt	.-12     	; 0xac2 <__divsf3_pse+0x6c>
 ace:	86 95       	lsr	r24
 ad0:	77 95       	ror	r23
 ad2:	67 95       	ror	r22
 ad4:	b7 95       	ror	r27
 ad6:	f7 95       	ror	r31
 ad8:	9f 5f       	subi	r25, 0xFF	; 255
 ada:	c9 f7       	brne	.-14     	; 0xace <__divsf3_pse+0x78>
 adc:	88 0f       	add	r24, r24
 ade:	91 1d       	adc	r25, r1
 ae0:	96 95       	lsr	r25
 ae2:	87 95       	ror	r24
 ae4:	97 f9       	bld	r25, 7
 ae6:	08 95       	ret
 ae8:	e1 e0       	ldi	r30, 0x01	; 1
 aea:	66 0f       	add	r22, r22
 aec:	77 1f       	adc	r23, r23
 aee:	88 1f       	adc	r24, r24
 af0:	bb 1f       	adc	r27, r27
 af2:	62 17       	cp	r22, r18
 af4:	73 07       	cpc	r23, r19
 af6:	84 07       	cpc	r24, r20
 af8:	ba 07       	cpc	r27, r26
 afa:	20 f0       	brcs	.+8      	; 0xb04 <__divsf3_pse+0xae>
 afc:	62 1b       	sub	r22, r18
 afe:	73 0b       	sbc	r23, r19
 b00:	84 0b       	sbc	r24, r20
 b02:	ba 0b       	sbc	r27, r26
 b04:	ee 1f       	adc	r30, r30
 b06:	88 f7       	brcc	.-30     	; 0xaea <__divsf3_pse+0x94>
 b08:	e0 95       	com	r30
 b0a:	08 95       	ret

00000b0c <__fp_mpack>:
 b0c:	9f 3f       	cpi	r25, 0xFF	; 255
 b0e:	31 f0       	breq	.+12     	; 0xb1c <__fp_mpack_finite+0xc>

00000b10 <__fp_mpack_finite>:
 b10:	91 50       	subi	r25, 0x01	; 1
 b12:	20 f4       	brcc	.+8      	; 0xb1c <__fp_mpack_finite+0xc>
 b14:	87 95       	ror	r24
 b16:	77 95       	ror	r23
 b18:	67 95       	ror	r22
 b1a:	b7 95       	ror	r27
 b1c:	88 0f       	add	r24, r24
 b1e:	91 1d       	adc	r25, r1
 b20:	96 95       	lsr	r25
 b22:	87 95       	ror	r24
 b24:	97 f9       	bld	r25, 7
 b26:	08 95       	ret

00000b28 <__divmodhi4>:
 b28:	97 fb       	bst	r25, 7
 b2a:	07 2e       	mov	r0, r23
 b2c:	16 f4       	brtc	.+4      	; 0xb32 <__divmodhi4+0xa>
 b2e:	00 94       	com	r0
 b30:	07 d0       	rcall	.+14     	; 0xb40 <__divmodhi4_neg1>
 b32:	77 fd       	sbrc	r23, 7
 b34:	09 d0       	rcall	.+18     	; 0xb48 <__divmodhi4_neg2>
 b36:	0e 94 a8 05 	call	0xb50	; 0xb50 <__udivmodhi4>
 b3a:	07 fc       	sbrc	r0, 7
 b3c:	05 d0       	rcall	.+10     	; 0xb48 <__divmodhi4_neg2>
 b3e:	3e f4       	brtc	.+14     	; 0xb4e <__divmodhi4_exit>

00000b40 <__divmodhi4_neg1>:
 b40:	90 95       	com	r25
 b42:	81 95       	neg	r24
 b44:	9f 4f       	sbci	r25, 0xFF	; 255
 b46:	08 95       	ret

00000b48 <__divmodhi4_neg2>:
 b48:	70 95       	com	r23
 b4a:	61 95       	neg	r22
 b4c:	7f 4f       	sbci	r23, 0xFF	; 255

00000b4e <__divmodhi4_exit>:
 b4e:	08 95       	ret

00000b50 <__udivmodhi4>:
 b50:	aa 1b       	sub	r26, r26
 b52:	bb 1b       	sub	r27, r27
 b54:	51 e1       	ldi	r21, 0x11	; 17
 b56:	07 c0       	rjmp	.+14     	; 0xb66 <__udivmodhi4_ep>

00000b58 <__udivmodhi4_loop>:
 b58:	aa 1f       	adc	r26, r26
 b5a:	bb 1f       	adc	r27, r27
 b5c:	a6 17       	cp	r26, r22
 b5e:	b7 07       	cpc	r27, r23
 b60:	10 f0       	brcs	.+4      	; 0xb66 <__udivmodhi4_ep>
 b62:	a6 1b       	sub	r26, r22
 b64:	b7 0b       	sbc	r27, r23

00000b66 <__udivmodhi4_ep>:
 b66:	88 1f       	adc	r24, r24
 b68:	99 1f       	adc	r25, r25
 b6a:	5a 95       	dec	r21
 b6c:	a9 f7       	brne	.-22     	; 0xb58 <__udivmodhi4_loop>
 b6e:	80 95       	com	r24
 b70:	90 95       	com	r25
 b72:	bc 01       	movw	r22, r24
 b74:	cd 01       	movw	r24, r26
 b76:	08 95       	ret

00000b78 <_exit>:
 b78:	f8 94       	cli

00000b7a <__stop_program>:
 b7a:	ff cf       	rjmp	.-2      	; 0xb7a <__stop_program>
